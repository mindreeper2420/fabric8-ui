@import '../../assets/stylesheets/base';

@icon-path: '../../assets/icon/';
@import '../../assets/stylesheets/icons';

// wizard
@wizard-spacing:@grid-gutter-width/2;
@wizard-header-color:@color-pf-black-100;
@wizard-header-divider-color: @color-pf-black-300;
@wizard-footer-color: @color-pf-white;
@wizard-footer-divider-color: @color-pf-black-300;
//noinspection SassScssResolvedByNameOnly
@wizard-padding: @grid-gutter-width / 2;

@wizard-spacing: 0px;
// shadow distance from element
@wizard-shadow-offset: 3px;
// makes shadow bigger
@wizard-shadow-spread-radius: 3px;
// makes shadows edge blury
@wizard-shadow-blur-radius: 3px;
//noinspection SassScssResolvedByNameOnly
@wizard-section-column-background-color: @color-pf-white;// @btn-primary-bg;
@wizard-layout-block-background-color: @color-pf-white;
//noinspection SassScssResolvedByNameOnly
@wizard-layout-block-header-border-color: @color-pf-black-100;// @color-pf-blue-300;
//noinspection SassScssUnresolvedVariable,SassScssUnresolvedVariable
@wizard-layout-block-shadow-color: darken(@navbar-default-bg, 10%);
//noinspection SassScssUnresolvedVariable,SassScssUnresolvedVariable
@wizard-block-header-color: @color-pf-white;

// make styles apply to host element and all child elements , including child components
:host /deep/ {

  background-color: @color-pf-white;

  // ensure consistent padding on bootstrap rows
  // startswith col-
  [class^="col-"]
  {
    padding-left:@grid-gutter-width/2;
    padding-right:@grid-gutter-width/2;
  }
  // contains col-
  [class*=" col-"]
  {
    padding-left:@grid-gutter-width/2;
    padding-right:@grid-gutter-width/2;
  }


  flex:1;
  display:flex;
  position:relative;
  width:100%;

  @mixin wizard-step-child-elements {
    // position buttons
    >header {
      position:relative;
      background-color: @wizard-header-color;
      &.container-fluid {
          padding-left:@wizard-spacing + @debug-border ;
          padding-right:@wizard-spacing + @debug-border ;
          margin-left:0;
          margin-right:0;
          >.row {
            margin-left:-(@wizard-spacing + @debug-border) ;
            margin-right:-(@wizard-spacing + @debug-border);
          }
      }
      &.container {
          width:100%;
      }
    }
    >section {
      flex:1;
      // when using flex here it is important to stretch the content:
      // and choose the direction as column
      position:relative;
      margin:0;
      padding:0;
      width:auto;
      &.container-fluid {
        // Bug: there is an issue with this element, if the border/padding sum
        // is less than 5px, content overflows and horizontal scroll bars kick
        // in and it overflows the container. This is caused by a margin of 20px
        // when it should be @grid-gutter-width / 2
        .form-horizontal {
          margin-left:-(@grid-gutter-width / 2);
          margin-right:-(@grid-gutter-width / 2);
        }
        .form-group {
          margin-left:0;
          margin-right:0;
        }
        padding-left:@wizard-spacing  + @debug-border;
        padding-right:@wizard-spacing + @debug-border;
        position:relative;
        >.row {
          margin-left:-(@wizard-spacing + @debug-border) ;
          margin-right:-(@wizard-spacing + @debug-border);
          padding:0;
          width:auto;
          position:relative;
        }
      }
      &.container {
        padding-left:@wizard-spacing + @debug-border;
        padding-right:@wizard-spacing + @debug-border;
        width:100%;
        margin-left:0;
        margin-right:0;
      }
      &.forge-section {
        background-color: @color-pf-black-200;
      }
    }
    >footer {
      position:relative;
      border-top:solid 1px @wizard-footer-divider-color;
      background-color: @wizard-footer-color;
      &.container-fluid {
        padding-left:@wizard-spacing + @debug-border ;
        padding-right:@wizard-spacing + @debug-border ;
        margin-left:0;
        margin-right:0;
        >.row {
          margin-left:-(@wizard-spacing + @debug-border) ;
          margin-right:-(@wizard-spacing + @debug-border);
        }
      }
      &.container {
        width:100%;
      }
    }
  };

  .wizard {
    flex:1;
    display:flex;
      border: solid 0 lime;
      position:relative;
      width:100%;
    // only applies to rows in the wizard
    .row {
      padding-top:0;
    }
    // only applies to buttons in the wizard
    .btn {
      min-width: 90px;
    }
    .wizard-step {
      border: solid 0 green;
      position:relative;
      width:100%;
      flex:1;
      // by default the step is not visible but becomes
      // visible when the active class is applied.
      display:none;
      &.active {
        display:flex;
        flex-direction: column;
        align-content: stretch;
        width:100% !important;
      }
      @include wizard-step-child-elements;
      // for cases where the step has a form element
      >form {
        border: solid 0 hotpink;
        flex:1;
        display:flex;
        flex-direction: column;
        position:relative;
        width:100%;
        @include wizard-step-child-elements;

      }

      .wizard-step-title {
        position:relative;
        display:flex;
        // main axis
        justify-content: space-between;
        // cross axis
        align-items: center;
        // main axis direction
        flex-direction: row;
        .text{
          font-weight: 600;
        }
      }
      .wizard-step-tool-bar {
        position:relative;
        display:flex;
        flex-direction: row;
        justify-content: flex-end;
        padding-top:@wizard-spacing;
        padding-bottom:@wizard-spacing;
        &.with-items-at-end{
          justify-content: flex-end;
        }
        &.with-items-at-start{
          justify-content: flex-start;
        }
        &.with-items-in-center{
          justify-content:center;
        }
        &.with-items-space-between{
          justify-content:space-between;
        }
        &.with-items-space-around{
          justify-content:space-around;
        }
        // will stretch auto sized items
        &.with-items-stretch{
          justify-content:stretch;
        }
      }
    }
  }
}
